// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the user's name.
type Bytes struct {
	Bytes                []byte   `protobuf:"bytes,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bytes) Reset()         { *m = Bytes{} }
func (m *Bytes) String() string { return proto.CompactTextString(m) }
func (*Bytes) ProtoMessage()    {}
func (*Bytes) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{0}
}

func (m *Bytes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bytes.Unmarshal(m, b)
}
func (m *Bytes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bytes.Marshal(b, m, deterministic)
}
func (m *Bytes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bytes.Merge(m, src)
}
func (m *Bytes) XXX_Size() int {
	return xxx_messageInfo_Bytes.Size(m)
}
func (m *Bytes) XXX_DiscardUnknown() {
	xxx_messageInfo_Bytes.DiscardUnknown(m)
}

var xxx_messageInfo_Bytes proto.InternalMessageInfo

func (m *Bytes) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

type Address struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{1}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type Symbol struct {
	Symbol               string   `protobuf:"bytes,1,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Symbol) Reset()         { *m = Symbol{} }
func (m *Symbol) String() string { return proto.CompactTextString(m) }
func (*Symbol) ProtoMessage()    {}
func (*Symbol) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{2}
}

func (m *Symbol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Symbol.Unmarshal(m, b)
}
func (m *Symbol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Symbol.Marshal(b, m, deterministic)
}
func (m *Symbol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Symbol.Merge(m, src)
}
func (m *Symbol) XXX_Size() int {
	return xxx_messageInfo_Symbol.Size(m)
}
func (m *Symbol) XXX_DiscardUnknown() {
	xxx_messageInfo_Symbol.DiscardUnknown(m)
}

var xxx_messageInfo_Symbol proto.InternalMessageInfo

func (m *Symbol) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

type Hash struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Hash) Reset()         { *m = Hash{} }
func (m *Hash) String() string { return proto.CompactTextString(m) }
func (*Hash) ProtoMessage()    {}
func (*Hash) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{3}
}

func (m *Hash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hash.Unmarshal(m, b)
}
func (m *Hash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hash.Marshal(b, m, deterministic)
}
func (m *Hash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hash.Merge(m, src)
}
func (m *Hash) XXX_Size() int {
	return xxx_messageInfo_Hash.Size(m)
}
func (m *Hash) XXX_DiscardUnknown() {
	xxx_messageInfo_Hash.DiscardUnknown(m)
}

var xxx_messageInfo_Hash proto.InternalMessageInfo

func (m *Hash) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type Height struct {
	Height               uint64   `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Height) Reset()         { *m = Height{} }
func (m *Height) String() string { return proto.CompactTextString(m) }
func (*Height) ProtoMessage()    {}
func (*Height) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{4}
}

func (m *Height) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Height.Unmarshal(m, b)
}
func (m *Height) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Height.Marshal(b, m, deterministic)
}
func (m *Height) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Height.Merge(m, src)
}
func (m *Height) XXX_Size() int {
	return xxx_messageInfo_Height.Size(m)
}
func (m *Height) XXX_DiscardUnknown() {
	xxx_messageInfo_Height.DiscardUnknown(m)
}

var xxx_messageInfo_Height proto.InternalMessageInfo

func (m *Height) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type Null struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Null) Reset()         { *m = Null{} }
func (m *Null) String() string { return proto.CompactTextString(m) }
func (*Null) ProtoMessage()    {}
func (*Null) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{5}
}

func (m *Null) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Null.Unmarshal(m, b)
}
func (m *Null) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Null.Marshal(b, m, deterministic)
}
func (m *Null) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Null.Merge(m, src)
}
func (m *Null) XXX_Size() int {
	return xxx_messageInfo_Null.Size(m)
}
func (m *Null) XXX_DiscardUnknown() {
	xxx_messageInfo_Null.DiscardUnknown(m)
}

var xxx_messageInfo_Null proto.InternalMessageInfo

// The response message containing the greetings
type Response struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Result               []byte   `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	Err                  string   `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{6}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Response) GetResult() []byte {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *Response) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*Bytes)(nil), "rpc.Bytes")
	proto.RegisterType((*Address)(nil), "rpc.Address")
	proto.RegisterType((*Symbol)(nil), "rpc.Symbol")
	proto.RegisterType((*Hash)(nil), "rpc.Hash")
	proto.RegisterType((*Height)(nil), "rpc.Height")
	proto.RegisterType((*Null)(nil), "rpc.Null")
	proto.RegisterType((*Response)(nil), "rpc.Response")
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_77a6da22d6a3feb1) }

var fileDescriptor_77a6da22d6a3feb1 = []byte{
	// 397 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xf1, 0x8a, 0xda, 0x40,
	0x10, 0xc6, 0x7b, 0x35, 0xd1, 0x73, 0xee, 0xae, 0x3d, 0xb6, 0xa5, 0x84, 0x83, 0xc2, 0x91, 0x83,
	0x72, 0xd0, 0x43, 0xda, 0xfa, 0x04, 0xa6, 0x94, 0x58, 0x28, 0x22, 0xd1, 0x17, 0x58, 0x37, 0xa3,
	0x09, 0x8d, 0xbb, 0x61, 0x77, 0x05, 0xf3, 0xb6, 0x7d, 0x94, 0xb2, 0x93, 0x15, 0x04, 0x6d, 0xec,
	0x7f, 0xdf, 0xc7, 0xfc, 0x66, 0x76, 0xe6, 0x23, 0x81, 0xa1, 0xae, 0xc5, 0xa8, 0xd6, 0xca, 0x2a,
	0xd6, 0xd3, 0xb5, 0x88, 0x3f, 0x42, 0x98, 0x34, 0x16, 0x0d, 0x7b, 0x0f, 0xe1, 0xca, 0x89, 0xe8,
	0xea, 0xf1, 0xea, 0xf9, 0x36, 0x6b, 0x4d, 0xfc, 0x04, 0x83, 0x49, 0x9e, 0x6b, 0x34, 0x86, 0x45,
	0x30, 0xe0, 0xad, 0x24, 0x64, 0x98, 0x1d, 0x6c, 0xfc, 0x08, 0xfd, 0x45, 0xb3, 0x5d, 0xa9, 0x8a,
	0x7d, 0x38, 0x28, 0x8f, 0x78, 0x17, 0x3f, 0x40, 0x30, 0xe5, 0xa6, 0x60, 0x0c, 0x82, 0x82, 0x9b,
	0xc2, 0x57, 0x49, 0xbb, 0xee, 0x29, 0x96, 0x9b, 0xc2, 0xba, 0xee, 0x82, 0x14, 0xd5, 0x83, 0xcc,
	0xbb, 0xb8, 0x0f, 0xc1, 0x6c, 0x57, 0x55, 0xf1, 0x14, 0xae, 0x33, 0x34, 0xb5, 0x92, 0x06, 0xdd,
	0x24, 0xa1, 0x72, 0x24, 0x32, 0xcc, 0x48, 0xbb, 0x7e, 0x8d, 0x66, 0x57, 0xd9, 0xe8, 0x35, 0xdd,
	0xe0, 0x1d, 0xbb, 0x87, 0x1e, 0x6a, 0x1d, 0xf5, 0xe8, 0x51, 0x27, 0xbf, 0xfd, 0x09, 0x60, 0x90,
	0x6a, 0x44, 0x8b, 0x9a, 0x8d, 0xe0, 0xed, 0x02, 0x65, 0xbe, 0xd4, 0x5c, 0x1a, 0x2e, 0x6c, 0xa9,
	0x24, 0x83, 0x91, 0x4b, 0x89, 0x72, 0x79, 0xb8, 0x23, 0x7d, 0x78, 0x37, 0x7e, 0xc5, 0x3e, 0x03,
	0xa4, 0x68, 0x27, 0x42, 0xa8, 0x9d, 0xb4, 0xec, 0x96, 0xca, 0x3e, 0xa3, 0x53, 0xf8, 0x05, 0xde,
	0xa4, 0x68, 0x8f, 0x67, 0x0f, 0x09, 0x71, 0x69, 0xfc, 0x8b, 0x4e, 0x2a, 0x25, 0x7e, 0x27, 0x0d,
	0x05, 0xd6, 0x45, 0x7f, 0x81, 0xfb, 0x23, 0xba, 0x8d, 0xf0, 0xa6, 0xe5, 0xc9, 0x9c, 0x76, 0x3c,
	0xd3, 0xea, 0x73, 0xa5, 0xaa, 0xe5, 0xde, 0xf8, 0xd9, 0x2e, 0xd9, 0x73, 0x47, 0xde, 0xa5, 0x68,
	0x7f, 0x71, 0x63, 0xfd, 0xe0, 0x2e, 0xf8, 0x05, 0x6e, 0x52, 0xb4, 0xdf, 0x95, 0xb4, 0x9a, 0x8b,
	0x8b, 0x91, 0x8c, 0xe1, 0xdd, 0x11, 0x9d, 0x34, 0xfe, 0xd3, 0x69, 0x37, 0x6f, 0xcd, 0xb9, 0x5b,
	0x59, 0xdb, 0xb4, 0x2e, 0xf5, 0x16, 0xf3, 0xff, 0x58, 0xea, 0x09, 0xc2, 0x39, 0xa2, 0xee, 0x3e,
	0xf3, 0x13, 0x5c, 0xcf, 0x54, 0x8e, 0x3f, 0xe5, 0x5a, 0x75, 0x72, 0x5f, 0x29, 0xea, 0x1f, 0x7b,
	0x51, 0x70, 0xb9, 0xc1, 0x39, 0x2f, 0xb5, 0xb9, 0x70, 0xe6, 0xaa, 0x4f, 0x3f, 0xd9, 0xf8, 0x6f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xe5, 0x1a, 0x74, 0xa6, 0x71, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreeterClient interface {
	// Sends a greeting
	SendTransaction(ctx context.Context, in *Bytes, opts ...grpc.CallOption) (*Response, error)
	GetAccount(ctx context.Context, in *Address, opts ...grpc.CallOption) (*Response, error)
	GetTransaction(ctx context.Context, in *Hash, opts ...grpc.CallOption) (*Response, error)
	GetBlockByHash(ctx context.Context, in *Hash, opts ...grpc.CallOption) (*Response, error)
	GetBlockByHeight(ctx context.Context, in *Height, opts ...grpc.CallOption) (*Response, error)
	GetPoolTxs(ctx context.Context, in *Null, opts ...grpc.CallOption) (*Response, error)
	GetLastHeight(ctx context.Context, in *Null, opts ...grpc.CallOption) (*Response, error)
	GetContract(ctx context.Context, in *Address, opts ...grpc.CallOption) (*Response, error)
	GetContractBySymbol(ctx context.Context, in *Symbol, opts ...grpc.CallOption) (*Response, error)
	GetConfirmedHeight(ctx context.Context, in *Null, opts ...grpc.CallOption) (*Response, error)
	Peers(ctx context.Context, in *Null, opts ...grpc.CallOption) (*Response, error)
	NodeInfo(ctx context.Context, in *Null, opts ...grpc.CallOption) (*Response, error)
	GetExchangePairs(ctx context.Context, in *Address, opts ...grpc.CallOption) (*Response, error)
}

type greeterClient struct {
	cc *grpc.ClientConn
}

func NewGreeterClient(cc *grpc.ClientConn) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) SendTransaction(ctx context.Context, in *Bytes, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/SendTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetAccount(ctx context.Context, in *Address, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/GetAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetTransaction(ctx context.Context, in *Hash, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/GetTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetBlockByHash(ctx context.Context, in *Hash, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/GetBlockByHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetBlockByHeight(ctx context.Context, in *Height, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/GetBlockByHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetPoolTxs(ctx context.Context, in *Null, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/GetPoolTxs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetLastHeight(ctx context.Context, in *Null, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/GetLastHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetContract(ctx context.Context, in *Address, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/GetContract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetContractBySymbol(ctx context.Context, in *Symbol, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/GetContractBySymbol", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetConfirmedHeight(ctx context.Context, in *Null, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/GetConfirmedHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) Peers(ctx context.Context, in *Null, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/Peers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) NodeInfo(ctx context.Context, in *Null, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/NodeInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetExchangePairs(ctx context.Context, in *Address, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.Greeter/GetExchangePairs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreeterServer is the server API for Greeter service.
type GreeterServer interface {
	// Sends a greeting
	SendTransaction(context.Context, *Bytes) (*Response, error)
	GetAccount(context.Context, *Address) (*Response, error)
	GetTransaction(context.Context, *Hash) (*Response, error)
	GetBlockByHash(context.Context, *Hash) (*Response, error)
	GetBlockByHeight(context.Context, *Height) (*Response, error)
	GetPoolTxs(context.Context, *Null) (*Response, error)
	GetLastHeight(context.Context, *Null) (*Response, error)
	GetContract(context.Context, *Address) (*Response, error)
	GetContractBySymbol(context.Context, *Symbol) (*Response, error)
	GetConfirmedHeight(context.Context, *Null) (*Response, error)
	Peers(context.Context, *Null) (*Response, error)
	NodeInfo(context.Context, *Null) (*Response, error)
	GetExchangePairs(context.Context, *Address) (*Response, error)
}

// UnimplementedGreeterServer can be embedded to have forward compatible implementations.
type UnimplementedGreeterServer struct {
}

func (*UnimplementedGreeterServer) SendTransaction(ctx context.Context, req *Bytes) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendTransaction not implemented")
}
func (*UnimplementedGreeterServer) GetAccount(ctx context.Context, req *Address) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccount not implemented")
}
func (*UnimplementedGreeterServer) GetTransaction(ctx context.Context, req *Hash) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransaction not implemented")
}
func (*UnimplementedGreeterServer) GetBlockByHash(ctx context.Context, req *Hash) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockByHash not implemented")
}
func (*UnimplementedGreeterServer) GetBlockByHeight(ctx context.Context, req *Height) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockByHeight not implemented")
}
func (*UnimplementedGreeterServer) GetPoolTxs(ctx context.Context, req *Null) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPoolTxs not implemented")
}
func (*UnimplementedGreeterServer) GetLastHeight(ctx context.Context, req *Null) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLastHeight not implemented")
}
func (*UnimplementedGreeterServer) GetContract(ctx context.Context, req *Address) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContract not implemented")
}
func (*UnimplementedGreeterServer) GetContractBySymbol(ctx context.Context, req *Symbol) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContractBySymbol not implemented")
}
func (*UnimplementedGreeterServer) GetConfirmedHeight(ctx context.Context, req *Null) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfirmedHeight not implemented")
}
func (*UnimplementedGreeterServer) Peers(ctx context.Context, req *Null) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Peers not implemented")
}
func (*UnimplementedGreeterServer) NodeInfo(ctx context.Context, req *Null) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NodeInfo not implemented")
}
func (*UnimplementedGreeterServer) GetExchangePairs(ctx context.Context, req *Address) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetExchangePairs not implemented")
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_SendTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Bytes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).SendTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/SendTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).SendTransaction(ctx, req.(*Bytes))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Address)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/GetAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetAccount(ctx, req.(*Address))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Hash)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/GetTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetTransaction(ctx, req.(*Hash))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetBlockByHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Hash)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetBlockByHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/GetBlockByHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetBlockByHash(ctx, req.(*Hash))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetBlockByHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Height)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetBlockByHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/GetBlockByHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetBlockByHeight(ctx, req.(*Height))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetPoolTxs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Null)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetPoolTxs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/GetPoolTxs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetPoolTxs(ctx, req.(*Null))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetLastHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Null)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetLastHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/GetLastHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetLastHeight(ctx, req.(*Null))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetContract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Address)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetContract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/GetContract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetContract(ctx, req.(*Address))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetContractBySymbol_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Symbol)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetContractBySymbol(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/GetContractBySymbol",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetContractBySymbol(ctx, req.(*Symbol))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetConfirmedHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Null)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetConfirmedHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/GetConfirmedHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetConfirmedHeight(ctx, req.(*Null))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_Peers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Null)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).Peers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/Peers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).Peers(ctx, req.(*Null))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_NodeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Null)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).NodeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/NodeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).NodeInfo(ctx, req.(*Null))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetExchangePairs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Address)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetExchangePairs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greeter/GetExchangePairs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetExchangePairs(ctx, req.(*Address))
	}
	return interceptor(ctx, in, info, handler)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendTransaction",
			Handler:    _Greeter_SendTransaction_Handler,
		},
		{
			MethodName: "GetAccount",
			Handler:    _Greeter_GetAccount_Handler,
		},
		{
			MethodName: "GetTransaction",
			Handler:    _Greeter_GetTransaction_Handler,
		},
		{
			MethodName: "GetBlockByHash",
			Handler:    _Greeter_GetBlockByHash_Handler,
		},
		{
			MethodName: "GetBlockByHeight",
			Handler:    _Greeter_GetBlockByHeight_Handler,
		},
		{
			MethodName: "GetPoolTxs",
			Handler:    _Greeter_GetPoolTxs_Handler,
		},
		{
			MethodName: "GetLastHeight",
			Handler:    _Greeter_GetLastHeight_Handler,
		},
		{
			MethodName: "GetContract",
			Handler:    _Greeter_GetContract_Handler,
		},
		{
			MethodName: "GetContractBySymbol",
			Handler:    _Greeter_GetContractBySymbol_Handler,
		},
		{
			MethodName: "GetConfirmedHeight",
			Handler:    _Greeter_GetConfirmedHeight_Handler,
		},
		{
			MethodName: "Peers",
			Handler:    _Greeter_Peers_Handler,
		},
		{
			MethodName: "NodeInfo",
			Handler:    _Greeter_NodeInfo_Handler,
		},
		{
			MethodName: "GetExchangePairs",
			Handler:    _Greeter_GetExchangePairs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}
